"""

tab2gff.py

Victor Hanson-Smith
victorhansonsmith@gmail.com

This script converts TAB-formatted genome annotations into
GFF-formatted genome feature files.
"""

import sys, os
from argParser import ArgParser
ap = ArgParser(sys.argv)

#if sys.argv.__len__() < 3

def int2roman(x):
    if x == 0:
        return 0
    if x == 1:
        return "I"
    if x == 2:
        return "II"
    if x == 3:
        return "III"
    if x == 4:
        return "IV"
    if x == 5:
        return "V"
    if x == 6:
        return "VI"
    if x == 7:
        return "VII"
    if x == 8:
        return "VIII"
    if x == 9:
        return "IX"
    if x == 10:
        return "X"
    if x == 11:
        return "XI"
    if x == 12:
        return "XII"
    if x == 13:
        return "XIII"
    if x == 14:
        return "XIV"
    if x == 15:
        return "XV"
    if x == 16:
        return "XVI"
    if x == 17:
        return "XVII"
    if x == 18:
        return "XVIII"
    if x == 19:
        return "XIX"
    if x == 20:
        return "XX"
    return None


tabpath = ap.getArg("--in")
if False == os.path.exists(tabpath):
    print "\n. I cannot find your TAB file at", tabpath
    exit()

gffpath = ap.getOptionalArg("--out")
if gffpath == False or gffpath == None:
    gffpath = tabpath + ".gff"

fin = open(tabpath, "r")
fout = open(gffpath, "w")
fout.write("# gff-version 3\n")
fout.write("# This file was auto-generated by the script tab2gff.py\n")
fout.write("# using data from the TAB file " + tabpath + "\n")
fout.write("#\n")
for l in fin.xreadlines():
    if l.startswith("#"):
        continue
    tokens = l.split()
    
    genename = tokens[0]
    strand = int( tokens[1] )
    start = tokens[2]
    stop = tokens[3]
    chrom = int(tokens[5])
    notes = tokens[8:]
    
    roman = int2roman(chrom)
    if roman == None:
        print "\n. Error, I had trouble with this line:"
        print l
        continue
    
    sense = "."
    if strand == 1: # Watson strand
        sense = "+"
    elif strand == 0: # Crick stand
        sense = "-"
        
    out = "chr" + roman
    out += "\ttab2gff"
    out += "\tgene"   
    out += "\t" + start.__str__()
    out += "\t" + stop.__str__()
    out += "\t." # score
    out += "\t" + sense
    out += "\t0" # reading frame, which should be 0 for all the genes in the TAB
    out += "\tID=" + genename.__str__() + ";" + ";".join(notes)
    
    fout.write( out + "\n" )

fin.close()
fout.close()
    
    
    
    